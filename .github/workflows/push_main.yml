# On pushes to main, run tests on all supported platforms. If all tests pass, then publish release artifacts and
# update Orchid documentation site.

name: 'Push to `main` (Create Release)'

on:
  push:
    branches: ['main']
  schedule:
    - cron:  '30 2 * * 6'

env:
  GITHUB_ACTOR: '${{ github.actor }}'
  GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
  FIREBASE_TOKEN: '${{ secrets.FIREBASE_TOKEN }}'
  KEYSTORE: '${{ secrets.KEYSTORE }}'
  KEYSTORE_PASSWORD: '${{ secrets.KEYSTORE_PASSWORD }}'
  KEYSTORE_KEY_PASSWORD: '${{ secrets.KEYSTORE_KEY_PASSWORD }}'

jobs:
  check:
    runs-on: 'ubuntu-latest'
    steps:
      - uses: 'actions/checkout@v3'
        with:
          submodules: 'recursive'
          fetch-depth: 0 # all commit history and tags
      - name: 'Set up JDK 17'
        uses: 'actions/setup-java@v2'
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: 'Write keystore base64 to file'
        run: 'echo $KEYSTORE > ./release.keystore.txt'
      - name: 'Convert base64 keystore to binary'
        run: 'echo $KEYSTORE | base64 -d > ./release.keystore'
      - name: 'Check'
        run: './gradlew check -Prelease'
  assembleAndUploadBuildsToFirebase:
      runs-on: 'ubuntu-latest'
      needs: ['check']
      strategy:
        matrix:
          config: [
            { outputFormat: 'assemble', variant: 'QaRelease' },
            { outputFormat: 'bundle', variant: 'ProdRelease' },
          ]
      steps:
        - uses: 'actions/checkout@v3'
          with:
            submodules: 'recursive'
            fetch-depth: 0 # all commit history and tags
        - name: 'Set up JDK 17'
          uses: 'actions/setup-java@v2'
          with:
            distribution: 'temurin'
            java-version: '17'
        - name: 'Write keystore base64 to file'
          run: 'echo $KEYSTORE > ./release.keystore.txt'
        - name: 'Convert base64 keystore to binary'
          run: 'echo $KEYSTORE | base64 -d > ./release.keystore'
        - name: 'Assemble Artifacts for ${{ matrix.config.variant }}'
          run: './gradlew :abideApp:${{ matrix.config.outputFormat }}${{ matrix.config.variant }} -Prelease'
        - name: 'Upload Artifacts to Firebase'
          run: './gradlew :abideApp:appDistributionUpload${{ matrix.config.variant }} -Prelease'
  website:
    runs-on: 'ubuntu-latest'
    needs: ['check']
    steps:
      - uses: 'actions/checkout@v3'
        with:
          submodules: 'recursive'
          fetch-depth: 0 # all commit history and tags
      - name: 'Set up JDK 17'
        uses: 'actions/setup-java@v2'
        with:
          distribution: 'temurin'
          java-version: '17'
